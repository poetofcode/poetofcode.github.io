---
layout: post
title: "В последний раз про .gitignore"
date: 2013-02-05 22:28:24 +0400
comments: true
categories: [git, gitignore]
---
Довольно туманным для меня вопросом при переходе с **SVN** на **Git** стал вопрос об игнорировании ненужных файлов в репозитории. Поэтому оставлю тут запись, чтоб самому не забыть.

На самом деле все не слишком сложно и доступно в странице мануала по gitignore (`man gitignore` либо `git help ignore`)

<!-- more -->

Есть всего 3 варианта, которые могут возникнуть с игнорированием файлов в **Git**:

###Файлы еще не добавлены под контроль версий (untracked).

В этом случае и нужен файл `.gitignore`.

Пример содержимого файла:
	
{% highlight bash %}
/application/cache/*
/application/logs/*
{% endhighlight %}

Если теперь закоммитить `.gitignore`, то содержимое этих папок (пример из файловой структуры **Kohana**) не будет больше интересовать **git**. Можете убедиться в этом, выполнив команду `git status`.

### Файлы уже добавлены под контроль версий (tracked).

Для этого случая предусмотрена команда:
{% highlight bash %}
	$ git update-index --assume-unchanged ./filename.txt
{% endhighlight %}
Теперь новые изменения в файле `filename.txt` будут игнорироваться **git**'ом. Для того чтобы заставить **git** вновь реагировать на изменения существует обратная команда:
{% highlight bash %}
	$ git update-index --no-assume-unchanged ./filename.txt
{% endhighlight %}
Если файлы по ошибке попали под контроль, но быть там не должны (логи, кэш и прочие временные файлы), то удалить их оттуда можно командой:
{% highlight bash %}
	$ git rm --cached ./log.txt
{% endhighlight %}
Также есть хорошие примеры в самом мануале по команде.