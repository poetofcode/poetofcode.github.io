---
layout: post
title: "Лучше, чем твой босс"
date: 2016-04-09 11:04:39 +0300
comments: true
categories: 
---

Давненько я не отписывался. Связано отчасти с тем, что в свободное время я по мере сил пишу собственный *трекер задач*. Кроме того, я уже какое-то время пользуюсь им, хоть там ещё и много чего не сделано. Но всё же у меня накопились некоторые впечатления и выводы от этого опыта. В названии заметки присутствует слово "босс", потому что трекер стал для меня эдаким виртуальным боссом, но обо всём по порядку...

## Зачем писать свой трекер, когда их и так полно

Наверное раньше я бы начал расписывать, что захотел взяться за написание своего трекера, потому что другие меня чем-то не удовлетворяют по фичам/дизайну/удобствам и т.д. Но нет, на этот раз основная причина была совершенно другой.

Дело обстояло так: до написания своего трекера я использовал простенький issue tracker [Bitbucket'а](https://bitbucket.org/) и он меня вполне устраивал (кстати, речь идёт только о своих проектах, на работах мы обычно не выбираем, что использовать). Но затем мне захотелось быть в выражениях задач и в коде "более свободным" и, например, ставить задачи не так:

* Спроектировать каркас приложения
* Прикрутить поддержку ролей для пользователей
* Добавить поддержку i18n

а примерно так:

* Создать пустой класс `Application`
* Посмотреть тот хитовый фильмец
* Добавить метод `exec`
* Погамать часок, подзарядится позитивом

Оказалось, что ведение задач таким образом **на порядок эффективнее**, чем традиционным образом. Не знаю точно в чём тут дело, но на практике задачи из первого списка частенько *никогда не выполняются*, тогда как из второго *выполняются гораздо охотнее*.

Но ставить *такие задачи* в облачном сервисе, типа Bitbucket'а и неудобно и как-то стремновато (гложет мысль, типа, вдруг это кто-то прочитает?!). Таким образом, мне нужно было решение, которое можно "поднять" локально, на своём домашнем компе.

В итоге я стал рассматривать альтернативы из того что имеется из freeware/opensource рынка трекеров. Мне не хотелось брать что-то сложное и старое, типа [Trac](https://trac.edgewall.org/) или [Redmine](http://www.redmine.org/), поэтому я попробовал [Gitlab](https://about.gitlab.com/), он показался мне очень крутым и современным.

К сожалению, Gitlab, будучи установленным на моём локалхосте, показал себя крайней медлительным. Точнее **он ужасно тормозил :(** Например, при переходе на некоторые страницы приходилось ждать пока он оживёт по 30 секунд. Надо сказать, что я выделил для трекера довольно слабенький комп, но я всё равно не ожидал такого печального результата.

## Внезапно я стал вести задачи в блокноте

Да, я просто завёл в репозитории своего проекта файлик `todo.txt` и держал актуальный список задач в нём. И я какое-то время пользовался таким способом вполне успешно, но конечно, когда проектов стало больше, то мне стало неудобно. Изменения в файлике нужно было коммитить, а старые задачи нужно было искать в истории системы контроля версий.

## Собственный трекер

Что мы обычно представляем, когда речь заходит о системе управления проектами? Я, например, представляю себе что-то типа этого:

![Jira:Issue](/images/jira_tasks.png)

Но мне подумалось, что было бы веселее работать в чём-то таком:

![Bluenight:Dark](/images/trakr_dark.png)

*- так примерно выглядит тёмная тема моего трекера. Есть и традиционная светлая конечно (скрин будет дальше).*

Расскажу немного о функционале и особенностях.

# На чём пишется и какие возможности доступны

Это мой первый сайт на языке Golang. Мне было интересно как написать что-то на нём, так и оценить получившийся результат в действии. И то и другое приятно порадовало. Поначалу я немного опасался, что Go, возможно, слишком сыроват и не обзавелся достаточным количеством инструментов и решений для веба, но зачастую мне хваталало даже того, что есть в самом языке и в его стандартных библиотеках.

По возможностям: я решил не усложнять трекер, потому что для работы над своими проектами мне просто это не нужно. По функционалу вообще-то всё довольно стандартно - можно заводить *проекты*, *задачи*, *заметки*, загружать изображения.

Светлая тема, для примера:

![Bluenight:Light](/images/trakr_tasks_light.png)

Есть и несколько отличительных "фишечек", например, смена тем (светлая/тёмная), поддерживается разметка *markdown* для описания всех сущностей, добавление новой сущности доступно из любого места на сайте, сущности вообще можно не привязывать к какому-то проекту - это удобно, например, если вам нужно сделать заметку во время работы, но это к работе не относится.

Другими словами, собственный трекер позволил мне **реализовать всё**, что я хотел бы видеть в подобном приложении.

*Спасибо, что прочитали и удачного кодирования!*

**♪ Писалось под музыку:**

<iframe frameborder="0" style="border:none;width:600px;height:100px;" width="600" height="100" src="https://music.yandex.ru/iframe/#track/168657/37477">Слушайте <a href='https://music.yandex.ru/album/37477/track/168657'>Animals</a> — <a href='https://music.yandex.ru/artist/36784'>Nickelback</a> на Яндекс.Музыке</iframe>