---
layout: post
title: "Не все трекеры одинаково полезны"
date: 2017-04-05 16:25:13 +0300
comments: true
categories: 
---

В последний раз отписывался давно - целый год назад. Так случилось, в основном по двум причинам: во-первых, мне пришлось заново ставить *Windows 10* на ноут, так как наконец-то у меня появился нормальный *SSD*-винт. А так как блог работает на *Jekyll*, который нужно поднимать и настраивать локально, то это всё как-то откладывалась. Это, кстати, вторая причина - лень всё это делать.

Но теперь всё-таки руки дошли до блога, да и созрели некоторые темы, о которых я бы хотел написать.

Напомню, что год назад я [написал свой простенький трекер на Golang](/2016/04/09/luchshe-chem-tvoj-boss.html) и специально всё это время вёл свои личные проекты в нём, чтобы понять, если в этом смысл вообще. И я сделал некоторые выводы.

## Трекеры могут помочь, но не всегда

На что должен быть похож правильный трекер задач, чтобы сделать работу программистов наиболее эффективной? Какими фичами должен обладать?

Я пользовался разными: *Redmine*, *Jira*, трекерами, встроенными в *Github/Bitbucket*, всякими там странными и уже наверное устаревшими проектами, типа *Trac*.

Все они так или иначе справляются со своей задачей - управление проектами и отслеживанием ошибок.

Но я всегда ловил себя на мысли, что, во время активной работы над проектом - я постоянно веду какие-то локальные текстовые файлы или держу под рукой бумажный блокнот, куда вписываю микро-задачки по пунктам, пользуюсь *Evernote* для документирования каких-то моментов связанных с работой, но не подходящих ни под одну текущую задачу. Это в итоге приводит к сильной фрагментации нужной инфы и это становится со временем всё бОльшей проблемой. Страдает эффективность, мотивация, а любая задача требует больших затрат умственных усилий на поднятие в памяти контекста задачи.

## Всё дело в свободе

На самом деле, я стал писать свой трекер из-за того, чтобы проверить гипотезу: 

**Программисту необходима достаточная свобода действий**, как в коде, так и в трекере. Только в этом случае инструменты начнут приносить пользу.

Например, в коде - такие инструменты, как *Git/Mercurial* возвращают современому разработчику то чувство, за которое он когда-то полюбил программирование, с чего он начинал свой путь - стремление к экспериментам, вольность в этом, чувство удовлетворение от того, что можно создавать функционал, чувствую полную свободу действий.

Поэтому, когда ты хочешь поэкспериментировать с кодом, но ты не уверен в правильности действий, то ты создаёшь ветку, скажем, в *Git* и делаешь в ней всё что хочешь - правишь код, как угодно. Если что-то получится, то ты включешь этот функционал в общую ветвь, а если нет, то всегда можешь вернуться к старому коду. Это просто и гениально одновременно.

Ровно то же самое относится и к системам управления проектами - они должны быть по большей части направлены на удобство и гибкость использования **для разработчика**, а не для кого-либо ещё, поскольку именно разработчик "копается" в проекте больше всего времени.

## Что можно и что нельзя

Программист должен быть в праве заносить в трекер любую инфу по проекту - например, куски кода, которые он откуда-то скопиапастил и они нужны только лишь на ближайшие 5 минут, а потом никогда больше не понадобятся. Или там многочисленные ссылки на *Stackoverflow.com* или просто абстрактные мысли.

Другими словами, окружение реальных проектов - это **творческий беспорядок**. И это нормально! Они абсолютно не обязаны напоминать чистовик.

Для нагладности - вот пример НЕправильного рабочего окружения:

![apple-iphone-smartphone-desk](/images/apple-iphone-smartphone-desk.jpg)
*- Я глубоко убеждён, что в таких вот условиях невозможно продуктивно работать*

А вот это уже ближе к истине:

![harmony-in-chaos](/images/harmony-in-chaos.jpg)
*- Это тоже далеко от идеала, просто лень было искать подходящую картинку слишком долго*

## Короткие выводы

Конечно, простой трекер, который я написал не лучше, чем монструозные решения от именитых компаний, которые пилят свои решения уже кучу времени и которые довели до ума там всё.

Но ключевой особенностью полезного трекера, который позволит быть продуктивным - **свобода действий.** И это не совсем техническая характеристика, скорее это уже организационный момент, но это самая важная вещь в этой теме.

Я смог добиться этого (да и вообще задуматься об этом теме) при создании своего решения. Но вообще-то, есть куча *OpenSource*-решений, которые можно в том числе поднять на *localhost* или на своём *VPS* и настроить по своему вкусу. В любом случае - я настоятельно рекомендую это всем, кто занимается своими проектами.

*Спасибо за чтение и удачного кодирования!*

<hr>

*Писалось под музыку:*

<iframe frameborder="0" style="border:none;width:100%;height:600;" width="100%" height="200" src="https://music.yandex.ru/iframe/#album/4159984/hide/cover/">Слушайте <a href='https://music.yandex.ru/album/4159984'>Something Just Like This</a> — <a href='https://music.yandex.ru/artist/671'>Coldplay</a> на Яндекс.Музыке</iframe>