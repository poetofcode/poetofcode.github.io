<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: мотивация | PoetOfCode' Blog]]></title>
  <link href="http://poetofcode.ru/blog/categories/motivatsiia/atom.xml" rel="self"/>
  <link href="http://poetofcode.ru/"/>
  <updated>2015-01-13T00:31:17+04:00</updated>
  <id>http://poetofcode.ru/</id>
  <author>
    <name><![CDATA[PoetOfCode]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Обучение новым трюкам]]></title>
    <link href="http://poetofcode.ru/blog/2014/01/11/obuchieniie-novym-triukam/"/>
    <updated>2014-01-11T17:18:31+04:00</updated>
    <id>http://poetofcode.ru/blog/2014/01/11/obuchieniie-novym-triukam</id>
    <content type="html"><![CDATA[<p>В этой заметке я хочу поговорить об одном из методов увеличения скорости и качества получения новых знаний.</p>

<p><img src="http://poetofcode.ru/images/its_never_too_late_to_learn.jpg" alt="Учиться никода не поздно" style="float: right; width: 350px; margin: 20px;" /></p>

<div>
Всем программистам в процессе работы приходится заниматься одним и тем же делом - изучать новый для себя материал перед написанием кода и решением конкретной задачи. Не всем это занятие приходится по душе, но с этим ничего не поделаешь, такова специфика работы. 

Практика показывает, что молодые программисты, недавно приступившие к работе, берутся за нее с гораздо большим энтузиазмом, чем их опытные коллеги. Это подчас приводит к тому, что программисты-новички через определенное непродолжительное время ознакомления с новой для них областью начинают разбираться в ней лучше, чем спецы с многолетним стажем.
</div>




<p style="clear: both;"></p>




<!-- more -->


<p>Во многом так получается еще и потому что область знаний, в которой мы работаем изменяется слишком быстро. А знания последних достижений в области ценится выше, чем опыт в устаревших подходах. К примеру, так дела обстоят в Web технологиях. За последние годы Web-разработка сильно изменилась: вышла масса новых серверных фрэймворком, а клиентская часть усложнилась настолько, что старые знания едва ли смогут чем-то помочь.</p>

<p>Специалист, освоивший JavaScript фрэймворк AngularJS сможет реализовать гораздо более сложные клиентские интерфейсы, чем профи в JQuery за меньшее время. Семантическая разметка HTML5 и богатые возможности верстки с помощью CSS3 помогут программисту в написании сайтов, ориентированных для большего числа устройств, а также обеспечат лучшее место в поиске.</p>

<p>Очевидно, что нам всегда нужно поддерживать свои знания в актуальном состоянии. Проблема тут в том, что поддерживать мотивацию к изучению нового становится всё труднее со временем. На первый взгляд кажется, что технологий слишком много, а обновления происходят слишком часто. Конечно доля правды в этом есть. Но как часто это бывает в основном проблема лежит на уровне психологии.</p>

<p>Для себя я открыл некий способ самообмана. Каждый раз когда мне приходится изучать что-то новое &ndash; я просто &ldquo;обнуляю счётчик&rdquo;, то есть представляю будто бы делаю это в первый раз. В какой-то степени это позволяет всятряхнуться, посмотреть на вещи (пусть отчасти знакомые) под другим углом. По сути я становлюсь тем новичком, который рвётся в бой с новыми силами на штурм новой технологии, не ведая (пока что) о том, что его ждёт целая череда подводных камней, ограничений и прочих трудностей.</p>

<p>Смысл в том, чтобы освободить на какое-то время свой разум от &ldquo;груза&rdquo; прошлого опыта. В конце концов иногда это помогает просто перебороть свою лень и открыть статью/книгу/исходники. На какое-то время это работает, ну а дальше поддерживать интерес уже значительно проще.</p>
]]></content>
  </entry>
  
</feed>
